@using AutoMapper
@model CartItemResponsesVM
@inject IMapper mapper
@{
	ViewData["Title"] = $"Cart({Model.CartItemResponses.Count()})";
}

<div class="content-lg">
	<header class="header text-center">
		<h2 class="text-dark-primary fs-7">Shopping Cart <i class="bi bi-cart3"></i></h2>
	</header>
	<div class="row mt-4">
		<div class="col-12 col-xl-10 offset-xl-1">
			<a asp-controller="Home" asp-action="Index" class="btn btn-link text-decoration-none p-0 ms-n3"><i class="bi bi-caret-left-fill"></i> Continue shopping</a>
			@foreach (var cartItem in Model.CartItemResponses)
			{
				string classColor = (cartItem.Color != Color.None && cartItem.Color != Color.White) ? $"text-{cartItem.Color.ToString().ToLower()}" : "";

				<section class="row align-items-center border border-light-gray rounded shadow-md my-3 p-md-3">
					<!-- Product Details -->
					<div class="col-6 col-xl-5 d-flex align-items-center p-2">
						<div class="col-4">
							<figure class="mb-0">
								<a asp-controller="Home" asp-action="Details" asp-route-id="@cartItem.Product.Id" class="text-body">
									<partial name="_ProductImagePartial" model="mapper.Map<ProductResponse>(cartItem.Product)" />
								</a>
							</figure>
						</div>
						<div class="col-8 d-inline-block ps-3 text-start">
							<a asp-controller="Home" asp-action="Details" asp-route-id="@cartItem.Product.Id">
								<h5 class="text-truncate-multiline text-break mw-vw mb-0 pt-2">@cartItem.Product.Name</h5>
							</a>
							<small class="fst-italic">
								Color:
								<span class="@classColor">@cartItem.Color</span>
							</small>
							<div class="description-sm">
								<p><small>@Html.Raw(cartItem.Product.Description)</small></p>
							</div>
						</div>
					</div>
					<!-- Price -->
					<div class="col-1 col-xl-2 text-center fw-bold px-0 ps-2 ps-xl-5">
						@if (cartItem.Product.ListPrice.GetValueOrDefault() > 0 && cartItem.Product.ListPrice != cartItem.Product.Price)
						{
							<span class="text-decoration-line-through text-black-50">@cartItem.Product.ListPrice!.Value.ToString("c")</span>
						}
						<span>@cartItem.Product.Price.ToString("c")</span>
					</div>
					<!-- Count Buttons -->
					<div class="col-3 col-md-2 text-center">
						<div class="btn-group">
							<a asp-action="Subtract" asp-route-id="@cartItem.Id" class="btn btn-sm btn-outline-primary w-50">
								<span class="fw-bold">-</span>
							</a>
							<input class="form-control form-control-sm text-center rounded-0 border-primary border-0 border-top border-bottom w-2r" value="@cartItem.Count" readonly />
							<a asp-action="Add" asp-route-id="@cartItem.Id" class="btn btn-sm btn-outline-primary w-50">
								<span class="fw-bold">+</span>
							</a>
						</div>
					</div>
					<!-- Subtotal -->
					<div class="col-1 ps-0 ps-md-1 ms-n2 ms-md-0">
						<p class="m-0 text-dark-primary">@cartItem.TotalPrice.ToString("c")</p>
					</div>
					<!-- Delete Button -->
					<div class="col-1 col-md-2 text-center">
						<a asp-action="Remove" asp-route-id="@cartItem.Id" class="text-red fs-delete-cart"><i class="bi bi-trash3"></i> <span class="d-none d-md-inline">Delete</span></a>
					</div>
				</section>
			}
			<div class="pb-5"></div>
			<section class="fixed-bottom bg-white p-3 border-top">
				<!-- Total Price -->
				<h5 class="text-center">
					Total (@Model.CartItemResponses.Count() item):
					<span class="fw-bold fs-6 text-danger">@Model.TotalPrice.ToString("c")</span>
				</h5>
				<!-- Button -->
				<div class="text-center mt-4">
					<a asp-action="Checkout" class="btn btn-primary">Checkout</a>
				</div>
			</section>
		</div>
	</div>
</div>

