@model ProductsCategoriesVM
@{
	ViewData["Title"] = "Home";

	var pager = ViewBag.Pager as PagerService;
	var products = Model.ProductResponses;
	var filteredProducts = Model.FilteredProducts;
	var categoryCounts = Model.CategoryCounts;
}

<div class="row pt-2">
	<!-- Sidebar -->
	<aside class="col-lg-2 bg-light-gray">
		<div class="row gy-4">
			<!-- Search -->
			<div class="pt-4">
				<form asp-area="@Role.User" asp-controller="Home" asp-action="Index" method="get">
					<h6 class="text-body">Search an Item</h6>
					<div class="input-group" role="group">
						@if (!String.IsNullOrEmpty(ViewBag.Category))
						{
							<input type="hidden" name="category" value="@ViewBag.Category" />
						}
						<input type="search" name="search" class="form-control" placeholder="Search" />
						<button type="submit" class="input-group-text border border-light-gray  text-body text-opacity-75"><i class="bi bi-search"></i></button>
					</div>
				</form>
			</div>
			<!-- Top Rated Products -->
			<div>
				<h6 class="text-body">Top Rated Products</h6>
				<ul class="list-group">
					@foreach (var product in products.OrderByDescending(p => p.TotalRating).Take(5))
					{
						<li class="list-group-item">
							<a href="/Home/Details/@product.Id" class="text-body text-decoration-none">
								<div class="row align-items-center">
									<div class="col-4 px-1 pb-2">
										@{
											ViewBag.ImgSidebar = new ViewDataDictionary(ViewData) { { "CustomClass", "img-sidebar" } };
										}
										<partial name="_ProductImagePartial" model="product" view-data="ViewBag.ImgSidebar" />
									</div>
									<div class="col-8">
										<small class="text-break text-truncate-multiline">@product.Name</small>
										<small>
											<partial name="_ProductRatingPartial" model="product" />
										</small>
										<div>
											@if (product.ListPrice.GetValueOrDefault() > 0 && product.ListPrice != product.Price)
											{
												<small class="text-decoration-line-through text-black-50">@product.ListPrice!.Value.ToString("c")</small>
											}
											<small class="fw-semibold">@product.Price.ToString("c")</small>
										</div>
									</div>
								</div>
							</a>
						</li>
					}
				</ul>
			</div>
			<!-- Categories -->
			<div>
				<h6 class="text-body">Categories</h6>
				<ul class="list-group">
					@foreach (var (category, productsCount) in categoryCounts.Take(5))
					{
						<li class="list-group-item d-flex justify-content-between align-items-center">
							<a href="/Home?category=@category" class="text-body">@category</a>
							<small class="badge-sm bg-secondary">@productsCount</small>
						</li>
					}
				</ul>
			</div>
			<!-- Colors -->
			<div>
				<h6 class="text-body">Colors</h6>
				<div class="bg-white border border-light-gray rounded">
					<div class="mt-1 d-flex flex-wrap align-self-center justify-content-center">
						@for (int i = 1; i < Enum.GetValues(typeof(Color)).Length; i++)
						{
							Color color = (Color)Enum.GetValues(typeof(Color)).GetValue(i)!;
							<div class="d-inline-block m-1">
								<a href="/Home?color=@color" class="color-option bg-@color.ToString().ToLower()" title="@color"></a>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</aside>
	<!-- Main -->
	<div class="col-lg-10">
		<div class="row">
			@if (ViewBag.Search != null)
			{
				<div class="fs-4 fst-italic">
					<p>Products found containing: <span class="fw-bold">'@ViewBag.Search'</span></p>
				</div>
			}
			@foreach (var product in filteredProducts)
			{
				<div class="col-3 d-flex align-items-stretch">
					<div class="card w-100">
						<div class="card-header border-0">
							@{
								ViewBag.CardImgTop = new ViewDataDictionary(ViewData) { { "CustomClass", "card-img-top" } };
							}
							<partial name="_ProductImagePartial" model="product" view-data="ViewBag.CardImgTop" />
						</div>
						<div class="card-body text-center p-0 d-flex flex-column justify-content-between">
							<div>
								<div class="mb-1">
									<partial name="_ProductRatingPartial" model="product" />
								</div>
								<p class="mb-1 p-card-text text-truncate-multiline">@product.Name</p>
							</div>
							<div>
								<p class="card-text">
									@if (product.ListPrice.GetValueOrDefault() > 0 && product.ListPrice != product.Price)
									{
										<span class="text-decoration-line-through">@product.ListPrice!.Value.ToString("c")</span>
									}
									<span class="fw-semibold text-dark-primary fs-4">@product.Price.ToString("c")</span>
								</p>
							</div>
						</div>
						<div class="card-footer text-center border-0">
							<a asp-action="Details" asp-route-id="@product.Id" class="btn btn-primary w-100 btn-sm">Details</a>
						</div>
					</div>
				</div>
			}
		</div>
		<!-- Pagination -->
		<div class="container">
			@if (pager!.TotalPages > 0)
			{
				<ul class="pagination justify-content-end">
					@{
						string category = !String.IsNullOrEmpty(ViewBag.Category) ? $"category={ViewBag.Category}&" : string.Empty;
						string color = !String.IsNullOrEmpty(ViewBag.Color) ? $"color={ViewBag.Color}&" : string.Empty;
						string amp = !String.IsNullOrEmpty(ViewBag.Search) ? "&" : string.Empty;
						string search = !String.IsNullOrEmpty(ViewBag.Search) ? $"search={ViewBag.Search}" : string.Empty;
					}
					@for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
					{
						<li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
							<a href="/Home?@(category+color)page=@(pge+amp+search)" class="page-link">@pge</a>
						</li>
					}
				</ul>
			}
		</div>
	</div>
</div>
