@model ProductUpsertVM
@{
	ViewBag.Title = "Product Edit";
}

<div class="mt-5">
	<h3 class="text-center text-uppercase">Product Edit</h3>

	<div class="row mt-5 p-5 border">
		@{
			string colCount = (Model.ProductImages?.Count > 0) ? "col-10" : "col-12";
		}
		<div class="@colCount">
			<form method="post" enctype="multipart/form-data" onsubmit="handleSubmit()">
				<!-- Id -->
				<input asp-for="Id" hidden />
				<!-- Name -->
				<div class="form-floating my-2">
					<input asp-for="Name" class="form-control" placeholder="" />
					<label asp-for="Name" class="form-label text-muted"></label>
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>
				<!-- List Price -->
				<div class="form-floating my-2">
					<input type="number" asp-for="ListPrice" class="form-control" placeholder="" />
					<label asp-for="ListPrice" class="form-label text-muted"></label>
					<span asp-validation-for="ListPrice" class="text-danger"></span>
				</div>
				<!-- Price -->
				<div class="form-floating my-2">
					<input type="number" min="1" asp-for="Price" class="form-control" placeholder="" />
					<label asp-for="Price" class="form-label text-muted"></label>
					<span asp-validation-for="Price" class="text-danger"></span>
				</div>
				<!-- Category Id -->
				<div class="form-floating my-2">
					<select asp-for="CategoryId" asp-items="Model.Categories" class="form-control">
						<option selected disabled>--Please select--</option>
					</select>
					<label asp-for="CategoryId" class="form-label text-muted">Category</label>
					<span asp-validation-for="CategoryId" class="text-danger"></span>
				</div>
				<!-- Product Image -->
				<div class="form-floating my-2">
					<input type="file" multiple asp-for="ImageFiles" class="form-control" placeholder="" />
					<label asp-for="ImageFiles" class="form-label text-muted"></label>
					<span asp-validation-for="ImageFiles" class="text-danger"></span>
				</div>
				<!-- Description -->
				<div class="my-2">
					<label asp-for="Description" class="form-label text-muted small opacity-75"></label>
					<input id="Description" asp-for="Description" hidden />
					<div id="description_input" class="form-control overflow-auto" style="max-height: 20rem">
						@Html.Raw(Model.Description)
					</div>
					<span asp-validation-for="Description" class="text-danger"></span>
				</div>
				<!-- Colors -->
				<div class="my-2 row">
					<label class="form-label text-muted small opacity-75">Available Colors:</label>
					<div class="col-2">
						@for (int i = 1; i < Enum.GetValues(typeof(Color)).Length; i++)
						{
							Color color = (Color)Enum.GetValues(typeof(Color)).GetValue(i)!;
							bool isChecked = Model.Colors.Contains(color);
							<div class="d-inline-block mx-1">
								<input type="checkbox" class="btn-check" name="colors" id="color@(i)" value="@color" checked="@isChecked" autocomplete="off" />
								<label for="color@(i)" class="color-option bg-@color.ToString().ToLower()" title="@color"></label>
							</div>
						}
					</div>
				</div>
				<!-- Buttons -->
				<div class="mt-3 row">
					<div class="col-3">
						<button type="submit" class="btn btn-primary form-control">Update</button>
					</div>
					<div class="col-3">
						<a asp-action="Index" class="btn btn-outline-primary form-control">Back to List</a>
					</div>
					<div asp-validation-summary="ModelOnly" class="text-danger"></div>
				</div>
			</form>
		</div>
		@if (Model.ProductImages?.Count > 0)
		{
			<div class="col-2">
				@foreach (var image in Model.ProductImages)
				{
					<img src="@image.Path" class="w-100 border rounded-2" />
					<a asp-action="DeleteImage" asp-route-id="@image.Id" class="btn btn-danger mb-2 d-block">Delete</a>
				}
			</div>
		}
	</div>
</div>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
	<script src="~/js/product_upsert.js"></script>
}